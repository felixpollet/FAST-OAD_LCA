# The name of your project. This will set up a brightway project.
project: tutorial
reset_project: False  # True: deletes the project and re-installs from scratch, including import of ecoinvent.

# The version and model of ecoinvent to use.
ecoinvent:
    version: '3.10'
    model: 'cutoff'
    # Note: import of ecoinvent requires to provide credentials.
    # For privacy reasons, create a file named .env in the root folder of your project, 
    # that you will not share/commit and contains the following :
      # ECOINVENT_LOGIN=<your_login>
      # ECOINVENT_PASSWORD=<your_password>

# Definition of LCA model
# Although "model" is a mandatory name for the top level of the model, the
# sub-activities can be freely named by user
model:

  # Operational (use) phase
  operation:
    # Name of ecoinvent activity (background)
    name: 'market group for electricity, low voltage'
    # Geographic location (default is None)
    loc: 'Europe without Switzerland'
    # Specify amount of electricity as a float or a formula.
    # Parameters can refer directly to existing variables in FAST-OAD or new variables.
    # For existing variables, semi-colons ':' are to be replaced by double underscores '__'
    amount: mission__operational__energy / 3600 * n_cycles_uav / data__propulsion__multirotor__battery__efficiency
    # Tag activity to get its specific contribution to the LCA results
    custom_attributes:
      - attribute: "phase"
        value: "operation"

  # Production phase
  production:
    custom_attributes:
      - attribute: "phase"
        value: "production"

    # Production of propellers
    propellers:
      name: 'market for carbon fibre reinforced plastic, injection moulded'
      amount: data__weight__propulsion__multirotor__propeller__mass * data__propulsion__multirotor__propeller__number

    motors:
      name: 'market for electric motor, for electric scooter'
      amount: data__weight__propulsion__multirotor__motor__mass * data__propulsion__multirotor__propeller__number

    controllers:
      name: 'market for controller, for electric scooter'
      amount: data__weight__propulsion__multirotor__esc__mass * data__propulsion__multirotor__propeller__number

    airframe:
      name: 'market for carbon fibre reinforced plastic, injection moulded'
      amount: data__weight__airframe__body__mass + data__weight__airframe__arms__mass

    batteries:
      name: 'market for battery cell, Li-ion, NMC811'
      amount: data__weight__propulsion__multirotor__battery__mass * ceiling(n_cycles_uav / n_cycles_battery)

# The LCIA methods
methods:  # tip: you can search for methods with lca_algebraic function agb.findMethods()
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'climate change',  'global warming potential (GWP100)')"
    - "('ReCiPe 2016 v1.03, endpoint (H)', 'total: ecosystem quality', 'ecosystem quality')"
    - "('ReCiPe 2016 v1.03, endpoint (H)', 'total: human health', 'human health')"
    - "('ReCiPe 2016 v1.03, endpoint (H)', 'total: natural resources', 'natural resources')"